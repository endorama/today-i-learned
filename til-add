#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'
SCRIPT="$(readlink --canonicalize-existing "$0")"
SCRIPTPATH="$(dirname "$SCRIPT")"
SCRIPTNAME="$(basename "$SCRIPT")"
# Thanks https://dev.to/thiht/shell-scripts-matter :)

#/ Usage: til-add category title sourceURL
#/ Description: Create a new til in specified category
#/ Examples: til-add sysadmin "create encrypted partition" https://stackoverflow.com...
#/ Options:
#/   --help: Display this help message
#/   --version: Display programm version
#/ Version: 0.1.0
usage() { grep '^#/' "$0" | cut -c4- ; exit 0 ; }
version() { grep '^#/ Version:' "$0" | cut -c13- ; exit 0 ; }
expr "$*" : ".*--help" > /dev/null && usage
expr "$*" : ".*--version" > /dev/null && version

readonly LOG_FILE="/tmp/$SCRIPTNAME.log"
info()    { echo " [INFO]    $*" | tee -a "$LOG_FILE" >&2 ; }
warning() { echo " [WARNING] $*" | tee -a "$LOG_FILE" >&2 ; }
error()   { echo " [ERROR]   $*" | tee -a "$LOG_FILE" >&2 ; }
fatal()   { echo " [FATAL]   $*" | tee -a "$LOG_FILE" >&2 ; exit 1 ; }

# cleanup() {}

# Parse command line options.
# while getopts ab: OPT; do
#   case "$OPT" in
#     a)
#       echo "set a"
#     b)
#       echo $OPTARG
#       ;;
#     \?)
#       # getopts issues an error message
#       usage
#       exit 1
#       ;;
#   esac
# done
# Remove the switches we parsed above.
# shift `expr $OPTIND - 1`

sanitize() {
  local string
  string=$1
  string="${string// /_}"
  string="${string,,}"
  echo $string
}

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
    # trap cleanup EXIT
    # Script goes here
    
    [ $# -lt 3 ] && usage
    category=$1
    title=$2
    source=$3
    info "Creating '$title' in category '$category'"
    
    category=$(sanitize $category)
    title=$(sanitize $title)
    info "Til dest: ${category}/${title}"
    
    til_path=$(ruby scripts/create-page.rb "${category}/${title}" "${source}")
    vim $til_path
    ruby scripts/create-readme.rb
    git add tils/${category}
    git add .pages.yml README.md
    git commit -m "add ${category}/${title}"
    
    exit 0
fi
